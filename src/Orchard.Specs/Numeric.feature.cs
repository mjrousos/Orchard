using Orchard.ContentManagement;
using Orchard.Security;
using Orchard.UI.Admin;
using Orchard.DisplayManagement;
using Orchard.Localization;
using Orchard.Services;
using System.Web.Mvc;
using Orchard.Mvc.Filters;
ï»¿// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Orchard.Specs
{
    using TechTalk.SpecFlow;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Numeric Field")]
    public partial class NumericFieldFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
#line 1 "Numeric.feature"
#line hidden
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Numeric Field", "  In order to add numeric content to my types\r\n  As an administrator\r\n  I want to" +
                    " create, edit and publish numeric fields", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
            testRunner.OnFeatureEnd();
            testRunner = null;
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
            testRunner.OnScenarioEnd();
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
            testRunner.OnScenarioStart(scenarioInfo);
        public virtual void ScenarioCleanup()
            testRunner.CollectScenarioErrors();
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Creating and using numeric fields")]
        public virtual void CreatingAndUsingNumericFields()
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Creating and using numeric fields", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 9
    testRunner.Given("I have installed Orchard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
        testRunner.And("I have installed \"Orchard.Fields\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
    testRunner.When("I go to \"Admin/ContentTypes\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
    testRunner.Then("I should see \"<a[^>]*>.*?Create new type</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 13
    testRunner.When("I go to \"Admin/ContentTypes/Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table1.AddRow(new string[] {
                        "DisplayName",
                        "Event"});
                        "Name",
#line 14
        testRunner.And("I fill in", ((string)(null)), table1, "And ");
#line 18
        testRunner.And("I hit \"Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
        testRunner.And("I go to \"Admin/ContentTypes/\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
    testRunner.Then("I should see \"Event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
    testRunner.When("I go to \"Admin/ContentTypes/Edit/Event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
        testRunner.And("I follow \"Add Field\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
            table2.AddRow(new string[] {
                        "Guests"});
                        "FieldTypeName",
                        "NumericField"});
#line 25
        testRunner.And("I fill in", ((string)(null)), table2, "And ");
#line 30
        testRunner.And("I hit \"Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
    testRunner.Then("I should see \"The \\\"Guests\\\" field has been added.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 35
    testRunner.When("I go to \"Admin/Contents/Create/Event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
    testRunner.Then("I should see \"Guests\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
            table3.AddRow(new string[] {
                        "Event.Guests.Value",
                        "3"});
#line 37
    testRunner.When("I fill in", ((string)(null)), table3, "When ");
#line 40
        testRunner.And("I hit \"Save Draft\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
#line 42
    testRunner.Then("I should see \"The Event has been created as a draft.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
    testRunner.When("I go to \"Admin/Contents/List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
    testRunner.Then("I should see \"Guests:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
        testRunner.And("I should see \"3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
            table4.AddRow(new string[] {
                        "Fields[Guests].NumericFieldSettings.Hint",
                        "Please enter a number"});
#line 49
        testRunner.And("I fill in", ((string)(null)), table4, "And ");
#line 52
#line 53
        testRunner.And("I go to \"Admin/Contents/Create/Event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
    testRunner.Then("I should see \"Please enter a number\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
            table5.AddRow(new string[] {
                        "Fields[Guests].NumericFieldSettings.Required",
                        "true"});
#line 58
        testRunner.And("I fill in", ((string)(null)), table5, "And ");
#line 61
#line 62
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
            table6.AddRow(new string[] {
                        ""});
#line 63
        testRunner.And("I fill in", ((string)(null)), table6, "And ");
#line 66
#line 67
        testRunner.Then("I should see \"Guests\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 68
        testRunner.And("I should see \"Owner\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
            table7.AddRow(new string[] {
                        "Fields[Guests].NumericFieldSettings.Minimum",
                        "-10"});
                        "Fields[Guests].NumericFieldSettings.Maximum",
                        "100"});
#line 72
        testRunner.And("I fill in", ((string)(null)), table7, "And ");
#line 76
#line 77
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
            table8.AddRow(new string[] {
                        "-20"});
#line 78
    testRunner.When("I fill in", ((string)(null)), table8, "When ");
#line 81
#line 82
    testRunner.Then("I should see \"The value must be greater than -10\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 83
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
            table9.AddRow(new string[] {
                        "101"});
#line 84
        testRunner.And("I fill in", ((string)(null)), table9, "And ");
#line 87
#line 88
    testRunner.Then("I should see \"The value must be less than 100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 91
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
            table10.AddRow(new string[] {
                        "a"});
                        "b"});
#line 92
        testRunner.And("I fill in", ((string)(null)), table10, "And ");
#line 96
#line 97
    testRunner.Then("I should see \"The value &#39;a&#39; is not valid for Minimum.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 98
        testRunner.And("I should see \"The value &#39;b&#39; is not valid for Maximum.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
            table11.AddRow(new string[] {
#line 102
        testRunner.And("I fill in", ((string)(null)), table11, "And ");
#line 105
#line 106
    testRunner.Then("I should see \"Guests is an invalid number\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 118
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
            table12.AddRow(new string[] {
#line 119
        testRunner.And("I fill in", ((string)(null)), table12, "And ");
#line 122
#line 123
#line 124
    testRunner.Then("I should see \"required=\\\"required\\\"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 127
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
            table13.AddRow(new string[] {
                        "false"});
#line 128
        testRunner.And("I fill in", ((string)(null)), table13, "And ");
#line 131
#line 132
#line 133
    testRunner.Then("I should not see \"required=\\\"required\\\"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            this.ScenarioCleanup();
    }
}
#pragma warning restore
#endregion
