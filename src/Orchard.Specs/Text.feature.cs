using Orchard.ContentManagement;
using Orchard.Security;
using Orchard.UI.Admin;
using Orchard.DisplayManagement;
using Orchard.Localization;
using Orchard.Services;
using System.Web.Mvc;
using Orchard.Mvc.Filters;
ï»¿// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Orchard.Specs
{
    using TechTalk.SpecFlow;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Text Field")]
    public partial class TextFieldFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
#line 1 "Text.feature"
#line hidden
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Text Field", "  In order to add Text content to my types\r\n  As an administrator\r\n  I want to cr" +
                    "eate, edit and publish Text fields", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
            testRunner.OnFeatureEnd();
            testRunner = null;
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
            testRunner.OnScenarioEnd();
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
            testRunner.OnScenarioStart(scenarioInfo);
        public virtual void ScenarioCleanup()
            testRunner.CollectScenarioErrors();
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Creating and using Text fields")]
        public virtual void CreatingAndUsingTextFields()
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Creating and using Text fields", ((string[])(null)));
#line 7
this.ScenarioSetup(scenarioInfo);
#line 10
    testRunner.Given("I have installed Orchard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
        testRunner.And("I have installed \"Orchard.Fields\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
    testRunner.When("I go to \"Admin/ContentTypes\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
    testRunner.Then("I should see \"<a[^>]*>.*?Create new type</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
    testRunner.When("I go to \"Admin/ContentTypes/Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table1.AddRow(new string[] {
                        "DisplayName",
                        "Event"});
                        "Name",
#line 15
        testRunner.And("I fill in", ((string)(null)), table1, "And ");
#line 19
        testRunner.And("I hit \"Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
        testRunner.And("I go to \"Admin/ContentTypes/\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
    testRunner.Then("I should see \"Event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 24
    testRunner.When("I go to \"Admin/ContentTypes/Edit/Event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
        testRunner.And("I follow \"Add Field\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
            table2.AddRow(new string[] {
                        "Subject"});
                        "FieldTypeName",
                        "TextField"});
#line 26
        testRunner.And("I fill in", ((string)(null)), table2, "And ");
#line 31
        testRunner.And("I hit \"Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
    testRunner.Then("I should see \"The \\\"Subject\\\" field has been added.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 36
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
            table3.AddRow(new string[] {
                        "Fields[Subject].TextFieldSettingsEventsViewModel.Settings.Flavor",
                        "Large"});
#line 37
        testRunner.And("I fill in", ((string)(null)), table3, "And ");
#line 40
#line 41
        testRunner.And("I go to \"Admin/Contents/Create/Event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
    testRunner.Then("I should see \"\\\"Event\\\" settings have been saved.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
            table4.AddRow(new string[] {
                        "Fields[Subject].TextFieldSettingsEventsViewModel.Settings.Required",
                        "true"});
#line 46
        testRunner.And("I fill in", ((string)(null)), table4, "And ");
#line 49
#line 50
#line 51
        testRunner.Then("I should see \"\\\"Event\\\" settings have been saved.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
        testRunner.When("I go to \"Admin/Contents/Create/Event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
            table5.AddRow(new string[] {
                        "Event.Subject.Text",
                        ""});
#line 53
        testRunner.And("I fill in", ((string)(null)), table5, "And ");
#line 56
        testRunner.And("I hit \"Save Draft\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
            table6.AddRow(new string[] {
                        "Fields[Subject].TextFieldSettingsEventsViewModel.Settings.Hint",
                        "Subject of the event"});
#line 61
        testRunner.And("I fill in", ((string)(null)), table6, "And ");
#line 64
#line 65
#line 66
#line 67
#line 68
    testRunner.Then("I should see \"Subject of the event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 71
    testRunner.When("I go to \"Admin/Contents/Create/Event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
    testRunner.Then("I should see \"Subject\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
            table7.AddRow(new string[] {
                        "Orchard Harvest 2015"});
#line 73
    testRunner.When("I fill in", ((string)(null)), table7, "When ");
#line 76
#line 77
#line 78
    testRunner.Then("I should see \"The Event has been created as a draft.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 79
        testRunner.And("I should see \"Orchard Harvest 2015\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
            table8.AddRow(new string[] {
                        "Fields[Subject].TextFieldSettingsEventsViewModel.Settings.DefaultValue",
                        "Orchard Harvest 2016"});
#line 83
        testRunner.And("I fill in", ((string)(null)), table8, "And ");
#line 86
#line 87
#line 88
#line 89
    testRunner.Then("I should see \"value=\\\"Orchard Harvest 2016\\\"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 92
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
            table9.AddRow(new string[] {
#line 93
        testRunner.And("I fill in", ((string)(null)), table9, "And ");
#line 96
#line 97
#line 98
    testRunner.Then("I should see \"required=\\\"required\\\"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 101
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
            table10.AddRow(new string[] {
                        "false"});
#line 102
        testRunner.And("I fill in", ((string)(null)), table10, "And ");
#line 105
#line 106
#line 107
    testRunner.Then("I should not see \"required=\\\"required\\\"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            this.ScenarioCleanup();
    }
}
#pragma warning restore
#endregion
