using Orchard.ContentManagement;
using Orchard.Security;
using Orchard.UI.Admin;
using Orchard.DisplayManagement;
using Orchard.Localization;
using Orchard.Services;
using System.Web.Mvc;
using Orchard.Mvc.Filters;
ï»¿// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Orchard.Specs
{
    using TechTalk.SpecFlow;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DateTime Field")]
    public partial class DateTimeFieldFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
#line 1 "DateTime.feature"
#line hidden
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DateTime Field", "  In order to add Date content to my types\r\n  As an administrator\r\n  I want to cr" +
                    "eate, edit and publish DateTime fields", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
            testRunner.OnFeatureEnd();
            testRunner = null;
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
            testRunner.OnScenarioEnd();
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
            testRunner.OnScenarioStart(scenarioInfo);
        public virtual void ScenarioCleanup()
            testRunner.CollectScenarioErrors();
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Creating and using Date fields")]
        public virtual void CreatingAndUsingDateFields()
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Creating and using Date fields", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 9
    testRunner.Given("I have installed Orchard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
        testRunner.And("I have installed \"Orchard.Fields\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
    testRunner.When("I go to \"Admin/ContentTypes\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
    testRunner.Then("I should see \"<a[^>]*>.*?Create new type</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 13
    testRunner.When("I go to \"Admin/ContentTypes/Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table1.AddRow(new string[] {
                        "DisplayName",
                        "Event"});
                        "Name",
#line 14
        testRunner.And("I fill in", ((string)(null)), table1, "And ");
#line 18
        testRunner.And("I hit \"Create\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
        testRunner.And("I go to \"Admin/ContentTypes/\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
    testRunner.Then("I should see \"Event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
    testRunner.When("I go to \"Admin/ContentTypes/Edit/Event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
        testRunner.And("I follow \"Add Field\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
            table2.AddRow(new string[] {
                        "Date of the event"});
                        "EventDate"});
                        "FieldTypeName",
                        "DateTimeField"});
#line 25
        testRunner.And("I fill in", ((string)(null)), table2, "And ");
#line 30
        testRunner.And("I hit \"Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
    testRunner.Then("I should see \"The \\\"Date of the event\\\" field has been added.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 35
    testRunner.When("I go to \"Admin/Contents/Create/Event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
    testRunner.Then("I should see \"Date of the event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
            table3.AddRow(new string[] {
                        "Event.EventDate.Editor.Date",
                        "31/01/2012"});
                        "Event.EventDate.Editor.Time",
                        "12:00 AM"});
#line 37
    testRunner.When("I fill in", ((string)(null)), table3, "When ");
#line 41
        testRunner.And("I hit \"Save Draft\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
    testRunner.Then("I should see \"Date of the event could not be parsed as a valid date and time.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
#line 46
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
            table4.AddRow(new string[] {
                        "01/31/2012"});
#line 47
    testRunner.When("I fill in", ((string)(null)), table4, "When ");
#line 51
#line 52
#line 53
    testRunner.Then("I should see \"The Event has been created as a draft.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 54
    testRunner.When("I go to \"Admin/Contents/List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
    testRunner.Then("I should see \"Date of the event:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 56
        testRunner.And("I should see \"1/31/2012 12:00\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
            table5.AddRow(new string[] {
                        "Fields[EventDate].DateTimeFieldSettings.Hint",
                        "Enter the date of the event"});
#line 60
        testRunner.And("I fill in", ((string)(null)), table5, "And ");
#line 63
#line 64
        testRunner.And("I go to \"Admin/Contents/Create/Event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
    testRunner.Then("I should see \"Enter the date of the event\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 68
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
            table6.AddRow(new string[] {
                        "Fields[EventDate].DateTimeFieldSettings.Display",
                        "DateOnly"});
#line 69
        testRunner.And("I fill in", ((string)(null)), table6, "And ");
#line 72
#line 73
#line 74
    testRunner.Then("I should see \"Event.EventDate.Editor.Date\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 75
        testRunner.And("I should not see \"Event.EventDate.Editor.Time\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
            table7.AddRow(new string[] {
                        "TimeOnly"});
#line 79
        testRunner.And("I fill in", ((string)(null)), table7, "And ");
#line 82
#line 83
#line 84
    testRunner.Then("I should see \"Event.EventDate.Editor.Time\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 85
        testRunner.And("I should not see \"Event.EventDate.Editor.Date\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
            table8.AddRow(new string[] {
                        "DateAndTime"});
                        "Fields[EventDate].DateTimeFieldSettings.Required",
                        "true"});
#line 89
        testRunner.And("I fill in", ((string)(null)), table8, "And ");
#line 93
#line 94
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
            table9.AddRow(new string[] {
#line 95
        testRunner.And("I fill in", ((string)(null)), table9, "And ");
#line 98
#line 99
    testRunner.Then("I should see \"Date of the event is required.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 100
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
            table10.AddRow(new string[] {
#line 101
     testRunner.And("I fill in", ((string)(null)), table10, "And ");
#line 104
#line 105
#line 108
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
            table11.AddRow(new string[] {
#line 109
        testRunner.And("I fill in", ((string)(null)), table11, "And ");
#line 113
#line 114
#line 115
#line 116
    testRunner.When("I hit \"Save Draft\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
#line 120
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
            table12.AddRow(new string[] {
#line 121
        testRunner.And("I fill in", ((string)(null)), table12, "And ");
#line 125
#line 126
#line 127
#line 128
#line 129
#line 132
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
            table13.AddRow(new string[] {
                        "Fields[EventDate].DateTimeFieldSettings.Editor.Date",
                        "01/31/2016"});
                        "Fields[EventDate].DateTimeFieldSettings.Editor.Time",
                        "10:00 AM"});
#line 133
        testRunner.And("I fill in", ((string)(null)), table13, "And ");
#line 138
#line 139
#line 140
#line 141
    testRunner.And("I should see \"Event.EventDate.Editor.Time\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
#line 143
#line 144
    testRunner.Then("I should see \"The Event has been created.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 145
#line 146
#line 147
        testRunner.And("I should see \"1/31/2016 10:00\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            this.ScenarioCleanup();
        [NUnit.Framework.DescriptionAttribute("Creating and using date time fields in another culture")]
        public virtual void CreatingAndUsingDateTimeFieldsInAnotherCulture()
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Creating and using date time fields in another culture", ((string[])(null)));
#line 149
#line 152
#line 153
#line 154
        testRunner.And("I have the file \"Content\\orchard.core.po\" in \"Core\\App_Data\\Localization\\fr-FR\\or" +
                    "chard.core.po\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
#line 156
#line 157
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
            table14.AddRow(new string[] {
#line 158
        testRunner.And("I fill in", ((string)(null)), table14, "And ");
#line 162
#line 163
#line 164
#line 167
#line 168
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
            table15.AddRow(new string[] {
#line 169
        testRunner.And("I fill in", ((string)(null)), table15, "And ");
#line 174
#line 175
#line 176
#line 177
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
            table16.AddRow(new string[] {
#line 178
        testRunner.And("I fill in", ((string)(null)), table16, "And ");
#line 182
#line 185
    testRunner.When("I have \"fr-FR\" as the default culture", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 186
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
            table17.AddRow(new string[] {
#line 187
        testRunner.And("I fill in", ((string)(null)), table17, "And ");
#line 191
#line 192
    testRunner.Then("I should see \"Date of the event could not be parsed as a valid date and time\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 193
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
            table18.AddRow(new string[] {
                        "18:00"});
#line 194
        testRunner.And("I fill in", ((string)(null)), table18, "And ");
#line 198
#line 199
#line 200
    }
}
#pragma warning restore
#endregion
