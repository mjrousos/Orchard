// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Orchard.Specs
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class UsersFeature : object, Xunit.IClassFixture<UsersFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "Users.feature"
#line hidden
        
        public UsersFeature(UsersFeature.FixtureData fixtureData, Orchard_Specs_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "", "Users", "    In order to prevent users module regressions\n    As a site owner\n    I want t" +
                    "o create, search and modify user accounts", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public void TestInitialize()
        {
        }
        
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="There is only one user by default")]
        [Xunit.TraitAttribute("FeatureTitle", "Users")]
        [Xunit.TraitAttribute("Description", "There is only one user by default")]
        [Xunit.TraitAttribute("Category", "management")]
        public void ThereIsOnlyOneUserByDefault()
        {
            string[] tagsOfScenario = new string[] {
                    "management"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("There is only one user by default", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
    testRunner.Given("I have installed Orchard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
    testRunner.When("I go to \"admin/users\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
    testRunner.Then("I should see \"Users\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 11
        testRunner.And("I should see \"<a[^>]*>admin</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="I can create a new user")]
        [Xunit.TraitAttribute("FeatureTitle", "Users")]
        [Xunit.TraitAttribute("Description", "I can create a new user")]
        [Xunit.TraitAttribute("Category", "management")]
        public void ICanCreateANewUser()
        {
            string[] tagsOfScenario = new string[] {
                    "management"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I can create a new user", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 14
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 15
    testRunner.Given("I have installed Orchard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 16
    testRunner.When("I go to \"admin/users\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 17
    testRunner.Then("I should see \"Users\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
    testRunner.When("I follow \"Add a new user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table166 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table166.AddRow(new string[] {
                            "UserName",
                            "user1"});
                table166.AddRow(new string[] {
                            "Email",
                            "user1@domain.com"});
                table166.AddRow(new string[] {
                            "Password",
                            "a12345!"});
                table166.AddRow(new string[] {
                            "ConfirmPassword",
                            "a12345!"});
#line 19
        testRunner.And("I fill in", ((string)(null)), table166, "And ");
#line hidden
#line 25
        testRunner.And("I hit \"Publish\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 27
    testRunner.Then("I should see \"User created\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 28
    testRunner.When("I follow \"Add a new user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table167 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table167.AddRow(new string[] {
                            "UserName",
                            "user2"});
                table167.AddRow(new string[] {
                            "Email",
                            "user2@domain.com"});
                table167.AddRow(new string[] {
                            "Password",
                            "a12345!"});
                table167.AddRow(new string[] {
                            "ConfirmPassword",
                            "a12345!"});
                table167.AddRow(new string[] {
                            "UserRoles.Roles[0].Granted",
                            "true"});
#line 29
        testRunner.And("I fill in", ((string)(null)), table167, "And ");
#line hidden
#line 36
        testRunner.And("I hit \"Publish\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 38
    testRunner.Then("I should see \"User created\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 39
        testRunner.And("I should see \"Adding role Administrator to user user2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
    testRunner.When("I follow \"Add a new user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table168 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table168.AddRow(new string[] {
                            "UserName",
                            "user3"});
                table168.AddRow(new string[] {
                            "Email",
                            "user3@domain.com"});
                table168.AddRow(new string[] {
                            "Password",
                            "a12345!"});
                table168.AddRow(new string[] {
                            "ConfirmPassword",
                            "a12345!"});
                table168.AddRow(new string[] {
                            "UserRoles.Roles[0].Granted",
                            "true"});
                table168.AddRow(new string[] {
                            "UserRoles.Roles[1].Granted",
                            "true"});
                table168.AddRow(new string[] {
                            "UserRoles.Roles[2].Granted",
                            "true"});
                table168.AddRow(new string[] {
                            "UserRoles.Roles[3].Granted",
                            "true"});
                table168.AddRow(new string[] {
                            "UserRoles.Roles[4].Granted",
                            "true"});
#line 41
        testRunner.And("I fill in", ((string)(null)), table168, "And ");
#line hidden
#line 52
        testRunner.And("I hit \"Publish\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 53
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 54
    testRunner.Then("I should see \"User created\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 55
        testRunner.And("I should see \"Adding role Administrator to user user3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 56
        testRunner.And("I should see \"Adding role Editor to user user3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 57
        testRunner.And("I should see \"Adding role Moderator to user user3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
        testRunner.And("I should see \"Adding role Author to user user3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
        testRunner.And("I should see \"Adding role Contributor to user user3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 60
    testRunner.When("I follow \"Add a new user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 61
        testRunner.And("I hit \"Publish\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
    testRunner.Then("I should see \"The UserName field is required.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 63
    testRunner.Then("I should see \"The Email field is required.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 64
    testRunner.Then("I should see \"You must specify a valid email address.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 65
    testRunner.Then("I should see \"The Password field is required.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 66
    testRunner.Then("I should see \"The ConfirmPassword field is required.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 67
    testRunner.Then("I should see \"The password can&#39;t be empty.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 68
    testRunner.When("I go to \"admin/users\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 69
        testRunner.And("I follow \"Add a new user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table169 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table169.AddRow(new string[] {
                            "UserName",
                            "user4"});
                table169.AddRow(new string[] {
                            "Email",
                            "user4@domain.com"});
                table169.AddRow(new string[] {
                            "Password",
                            "a12345!"});
                table169.AddRow(new string[] {
                            "ConfirmPassword",
                            "a123456!"});
#line 70
        testRunner.And("I fill in", ((string)(null)), table169, "And ");
#line hidden
#line 76
        testRunner.And("I hit \"Publish\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 77
    testRunner.Then("I should see \"Password confirmation must match\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="I can edit an existing user")]
        [Xunit.TraitAttribute("FeatureTitle", "Users")]
        [Xunit.TraitAttribute("Description", "I can edit an existing user")]
        [Xunit.TraitAttribute("Category", "management")]
        public void ICanEditAnExistingUser()
        {
            string[] tagsOfScenario = new string[] {
                    "management"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I can edit an existing user", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 80
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 81
    testRunner.Given("I have installed Orchard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 82
    testRunner.When("I go to \"Admin/ContentTypes/Edit/User\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table170 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table170.AddRow(new string[] {
                            "ContentTypeSettingsViewModel.Draftable",
                            "true"});
#line 83
        testRunner.And("I fill in", ((string)(null)), table170, "And ");
#line hidden
#line 86
        testRunner.And("I hit \"Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
    testRunner.Then("I should see \"\\\"User\\\" settings have been saved.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 89
    testRunner.When("I go to \"admin/users\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 90
    testRunner.Then("I should see \"Users\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 91
    testRunner.When("I follow \"Add a new user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table171 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table171.AddRow(new string[] {
                            "UserName",
                            "user1"});
                table171.AddRow(new string[] {
                            "Email",
                            "user1@domain.com"});
                table171.AddRow(new string[] {
                            "Password",
                            "a12345!"});
                table171.AddRow(new string[] {
                            "ConfirmPassword",
                            "a12345!"});
#line 92
        testRunner.And("I fill in", ((string)(null)), table171, "And ");
#line hidden
#line 98
        testRunner.And("I hit \"Save Draft\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 99
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 100
    testRunner.Then("I should see \"User created\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table172 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table172.AddRow(new string[] {
                            "Options.Search",
                            "user1"});
#line 101
    testRunner.When("I fill in", ((string)(null)), table172, "When ");
#line hidden
#line 104
        testRunner.And("I hit \"Filter\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 105
    testRunner.Then("I should see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 106
    testRunner.When("I follow \"Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table173 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table173.AddRow(new string[] {
                            "UserName",
                            "user2"});
                table173.AddRow(new string[] {
                            "Email",
                            "user2@domain.com"});
#line 107
        testRunner.And("I fill in", ((string)(null)), table173, "And ");
#line hidden
#line 111
        testRunner.And("I hit \"Save Draft\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 112
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 113
    testRunner.Then("I should see \"User information updated\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 114
        testRunner.And("I should see \"<a[^>]*>user2</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 115
        testRunner.And("I should see \"user2@domain.com\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="I should not be able to reuse an existing username or email")]
        [Xunit.TraitAttribute("FeatureTitle", "Users")]
        [Xunit.TraitAttribute("Description", "I should not be able to reuse an existing username or email")]
        [Xunit.TraitAttribute("Category", "management")]
        public void IShouldNotBeAbleToReuseAnExistingUsernameOrEmail()
        {
            string[] tagsOfScenario = new string[] {
                    "management"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I should not be able to reuse an existing username or email", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 118
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 119
    testRunner.Given("I have installed Orchard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 120
    testRunner.When("I go to \"Admin/ContentTypes/Edit/User\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table174 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table174.AddRow(new string[] {
                            "ContentTypeSettingsViewModel.Draftable",
                            "true"});
#line 121
        testRunner.And("I fill in", ((string)(null)), table174, "And ");
#line hidden
#line 124
        testRunner.And("I hit \"Save\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 125
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 126
    testRunner.Then("I should see \"\\\"User\\\" settings have been saved.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 127
    testRunner.When("I go to \"admin/users\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 129
        testRunner.And("I follow \"Add a new user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table175 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table175.AddRow(new string[] {
                            "UserName",
                            "user1"});
                table175.AddRow(new string[] {
                            "Email",
                            "user1@domain.com"});
                table175.AddRow(new string[] {
                            "Password",
                            "a12345!"});
                table175.AddRow(new string[] {
                            "ConfirmPassword",
                            "a12345!"});
#line 130
        testRunner.And("I fill in", ((string)(null)), table175, "And ");
#line hidden
#line 136
        testRunner.And("I hit \"Publish\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 137
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 139
        testRunner.And("I follow \"Add a new user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table176 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table176.AddRow(new string[] {
                            "UserName",
                            "user2"});
                table176.AddRow(new string[] {
                            "Email",
                            "user2@domain.com"});
                table176.AddRow(new string[] {
                            "Password",
                            "a12345!"});
                table176.AddRow(new string[] {
                            "ConfirmPassword",
                            "a12345!"});
#line 140
        testRunner.And("I fill in", ((string)(null)), table176, "And ");
#line hidden
#line 146
        testRunner.And("I hit \"Publish\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 147
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 148
    testRunner.Then("I should see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 149
        testRunner.And("I should see \"<a[^>]*>user2</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table177 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table177.AddRow(new string[] {
                            "Options.Search",
                            "user1"});
#line 151
    testRunner.When("I fill in", ((string)(null)), table177, "When ");
#line hidden
#line 154
        testRunner.And("I hit \"Filter\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 155
    testRunner.Then("I should see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 156
    testRunner.When("I follow \"Edit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table178 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table178.AddRow(new string[] {
                            "UserName",
                            "user2"});
                table178.AddRow(new string[] {
                            "Email",
                            "user1@domain.com"});
#line 157
        testRunner.And("I fill in", ((string)(null)), table178, "And ");
#line hidden
#line 161
        testRunner.And("I hit \"Save Draft\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 162
    testRunner.Then("I should see \"User with that username and/or email already exists.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table179 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table179.AddRow(new string[] {
                            "UserName",
                            "user1"});
                table179.AddRow(new string[] {
                            "Email",
                            "user2@domain.com"});
#line 163
    testRunner.When("I fill in", ((string)(null)), table179, "When ");
#line hidden
#line 167
        testRunner.And("I hit \"Save Draft\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 168
    testRunner.Then("I should see \"User with that username and/or email already exists.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="I should be able to remove an existing user")]
        [Xunit.TraitAttribute("FeatureTitle", "Users")]
        [Xunit.TraitAttribute("Description", "I should be able to remove an existing user")]
        [Xunit.TraitAttribute("Category", "management")]
        public void IShouldBeAbleToRemoveAnExistingUser()
        {
            string[] tagsOfScenario = new string[] {
                    "management"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I should be able to remove an existing user", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 171
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 172
    testRunner.Given("I have installed Orchard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 173
    testRunner.When("I go to \"admin/users\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 175
        testRunner.And("I follow \"Add a new user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table180 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table180.AddRow(new string[] {
                            "UserName",
                            "user1"});
                table180.AddRow(new string[] {
                            "Email",
                            "user1@domain.com"});
                table180.AddRow(new string[] {
                            "Password",
                            "a12345!"});
                table180.AddRow(new string[] {
                            "ConfirmPassword",
                            "a12345!"});
#line 176
        testRunner.And("I fill in", ((string)(null)), table180, "And ");
#line hidden
#line 182
        testRunner.And("I hit \"Publish\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 183
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 184
    testRunner.Then("I should see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table181 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table181.AddRow(new string[] {
                            "Options.Search",
                            "user1"});
#line 186
    testRunner.When("I fill in", ((string)(null)), table181, "When ");
#line hidden
#line 189
        testRunner.And("I hit \"Filter\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 190
    testRunner.Then("I should see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 191
        testRunner.When("I hit \"Delete\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 192
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 193
    testRunner.Then("I should see \"User user1 deleted\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 194
        testRunner.And("I should not see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="I should not be able to filter users by name")]
        [Xunit.TraitAttribute("FeatureTitle", "Users")]
        [Xunit.TraitAttribute("Description", "I should not be able to filter users by name")]
        [Xunit.TraitAttribute("Category", "filtering")]
        public void IShouldNotBeAbleToFilterUsersByName()
        {
            string[] tagsOfScenario = new string[] {
                    "filtering"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I should not be able to filter users by name", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 197
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 198
    testRunner.Given("I have installed Orchard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 199
    testRunner.When("I go to \"admin/users\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 201
        testRunner.And("I follow \"Add a new user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table182 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table182.AddRow(new string[] {
                            "UserName",
                            "user1"});
                table182.AddRow(new string[] {
                            "Email",
                            "user1@domain.com"});
                table182.AddRow(new string[] {
                            "Password",
                            "a12345!"});
                table182.AddRow(new string[] {
                            "ConfirmPassword",
                            "a12345!"});
#line 202
        testRunner.And("I fill in", ((string)(null)), table182, "And ");
#line hidden
#line 208
        testRunner.And("I hit \"Publish\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 209
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 211
        testRunner.And("I follow \"Add a new user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table183 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table183.AddRow(new string[] {
                            "UserName",
                            "user2"});
                table183.AddRow(new string[] {
                            "Email",
                            "user2@domain.com"});
                table183.AddRow(new string[] {
                            "Password",
                            "a12345!"});
                table183.AddRow(new string[] {
                            "ConfirmPassword",
                            "a12345!"});
#line 212
        testRunner.And("I fill in", ((string)(null)), table183, "And ");
#line hidden
#line 218
        testRunner.And("I hit \"Publish\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 219
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 220
    testRunner.Then("I should see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 221
        testRunner.And("I should see \"<a[^>]*>user2</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table184 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table184.AddRow(new string[] {
                            "Options.Search",
                            "user1"});
#line 222
    testRunner.When("I fill in", ((string)(null)), table184, "When ");
#line hidden
#line 225
        testRunner.And("I hit \"Filter\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 226
    testRunner.Then("I should see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 227
        testRunner.And("I should not see \"<a[^>]*>admin</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 228
        testRunner.And("I should not see \"<a[^>]*>user2</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table185 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table185.AddRow(new string[] {
                            "Options.Search",
                            "user1@domain.com"});
#line 229
    testRunner.When("I fill in", ((string)(null)), table185, "When ");
#line hidden
#line 232
        testRunner.And("I hit \"Filter\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 233
    testRunner.Then("I should see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 234
        testRunner.And("I should not see \"<a[^>]*>admin</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 235
        testRunner.And("I should not see \"<a[^>]*>user2</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table186 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table186.AddRow(new string[] {
                            "Options.Search",
                            "@domain.com"});
#line 236
    testRunner.When("I fill in", ((string)(null)), table186, "When ");
#line hidden
#line 239
        testRunner.And("I hit \"Filter\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 240
    testRunner.Then("I should see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 241
        testRunner.And("I should see \"<a[^>]*>user2</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 242
        testRunner.And("I should not see \"<a[^>]*>admin</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="I should be able to filter users by status")]
        [Xunit.TraitAttribute("FeatureTitle", "Users")]
        [Xunit.TraitAttribute("Description", "I should be able to filter users by status")]
        [Xunit.TraitAttribute("Category", "filtering")]
        public void IShouldBeAbleToFilterUsersByStatus()
        {
            string[] tagsOfScenario = new string[] {
                    "filtering"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I should be able to filter users by status", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 245
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 246
    testRunner.Given("I have installed Orchard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 247
    testRunner.When("I go to \"admin/users\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 249
        testRunner.And("I follow \"Add a new user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table187 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table187.AddRow(new string[] {
                            "UserName",
                            "user1"});
                table187.AddRow(new string[] {
                            "Email",
                            "user1@domain.com"});
                table187.AddRow(new string[] {
                            "Password",
                            "a12345!"});
                table187.AddRow(new string[] {
                            "ConfirmPassword",
                            "a12345!"});
#line 250
        testRunner.And("I fill in", ((string)(null)), table187, "And ");
#line hidden
#line 256
        testRunner.And("I hit \"Publish\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 257
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 259
        testRunner.And("I follow \"Add a new user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table188 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table188.AddRow(new string[] {
                            "UserName",
                            "user2"});
                table188.AddRow(new string[] {
                            "Email",
                            "user2@domain.com"});
                table188.AddRow(new string[] {
                            "Password",
                            "a12345!"});
                table188.AddRow(new string[] {
                            "ConfirmPassword",
                            "a12345!"});
#line 260
        testRunner.And("I fill in", ((string)(null)), table188, "And ");
#line hidden
#line 266
        testRunner.And("I hit \"Publish\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 267
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 268
    testRunner.Then("I should see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 269
        testRunner.And("I should see \"<a[^>]*>user2</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table189 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table189.AddRow(new string[] {
                            "Options.Search",
                            "user1"});
#line 270
    testRunner.When("I fill in", ((string)(null)), table189, "When ");
#line hidden
#line 273
        testRunner.And("I hit \"Filter\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 274
    testRunner.Then("I should see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 275
    testRunner.When("I hit \"Disable\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 276
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 277
    testRunner.Then("I should see \"User user1 disabled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table190 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table190.AddRow(new string[] {
                            "Options.Search",
                            ""});
                table190.AddRow(new string[] {
                            "Options.Filter",
                            "Pending"});
#line 278
    testRunner.When("I fill in", ((string)(null)), table190, "When ");
#line hidden
#line 282
        testRunner.And("I hit \"Filter\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 283
    testRunner.Then("I should see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 284
        testRunner.And("I should not see \"<a[^>]*>user2</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 285
        testRunner.And("I should not see \"<a[^>]*>admin</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table191 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table191.AddRow(new string[] {
                            "Options.Search",
                            ""});
                table191.AddRow(new string[] {
                            "Options.Filter",
                            "EmailPending"});
#line 286
    testRunner.When("I fill in", ((string)(null)), table191, "When ");
#line hidden
#line 290
        testRunner.And("I hit \"Filter\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 291
    testRunner.Then("I should not see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 292
        testRunner.And("I should not see \"<a[^>]*>user2</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 293
        testRunner.And("I should not see \"<a[^>]*>admin</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table192 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table192.AddRow(new string[] {
                            "Options.Search",
                            ""});
                table192.AddRow(new string[] {
                            "Options.Filter",
                            "Approved"});
#line 294
    testRunner.When("I fill in", ((string)(null)), table192, "When ");
#line hidden
#line 298
        testRunner.And("I hit \"Filter\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 299
    testRunner.Then("I should not see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 300
        testRunner.And("I should see \"<a[^>]*>user2</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 301
        testRunner.And("I should see \"<a[^>]*>admin</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table193 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table193.AddRow(new string[] {
                            "Options.Search",
                            ""});
                table193.AddRow(new string[] {
                            "Options.Filter",
                            "All"});
#line 302
    testRunner.When("I fill in", ((string)(null)), table193, "When ");
#line hidden
#line 306
        testRunner.And("I hit \"Filter\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 307
    testRunner.Then("I should see \"<a[^>]*>user1</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 308
        testRunner.And("I should see \"<a[^>]*>user2</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 309
        testRunner.And("I should see \"<a[^>]*>admin</a>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="I should not be able to add users with invalid email addresses")]
        [Xunit.TraitAttribute("FeatureTitle", "Users")]
        [Xunit.TraitAttribute("Description", "I should not be able to add users with invalid email addresses")]
        [Xunit.TraitAttribute("Category", "email")]
        public void IShouldNotBeAbleToAddUsersWithInvalidEmailAddresses()
        {
            string[] tagsOfScenario = new string[] {
                    "email"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I should not be able to add users with invalid email addresses", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 311
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 312
    testRunner.Given("I have installed Orchard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 313
    testRunner.When("I go to \"admin/users\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 314
        testRunner.And("I follow \"Add a new user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table194 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table194.AddRow(new string[] {
                            "UserName",
                            "user1"});
                table194.AddRow(new string[] {
                            "Email",
                            "NotAnEmail"});
                table194.AddRow(new string[] {
                            "Password",
                            "a12345!"});
                table194.AddRow(new string[] {
                            "ConfirmPassword",
                            "a12345!"});
#line 315
        testRunner.And("I fill in", ((string)(null)), table194, "And ");
#line hidden
#line 321
        testRunner.And("I hit \"Publish\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 322
    testRunner.Then("I should see \"You must specify a valid email address.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="I should be able to add users with valid email addresses")]
        [Xunit.TraitAttribute("FeatureTitle", "Users")]
        [Xunit.TraitAttribute("Description", "I should be able to add users with valid email addresses")]
        [Xunit.TraitAttribute("Category", "email")]
        public void IShouldBeAbleToAddUsersWithValidEmailAddresses()
        {
            string[] tagsOfScenario = new string[] {
                    "email"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I should be able to add users with valid email addresses", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 324
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 325
    testRunner.Given("I have installed Orchard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 326
    testRunner.When("I go to \"admin/users\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 327
        testRunner.And("I follow \"Add a new user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table195 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "value"});
                table195.AddRow(new string[] {
                            "UserName",
                            "user1"});
                table195.AddRow(new string[] {
                            "Email",
                            "user1@domain.com"});
                table195.AddRow(new string[] {
                            "Password",
                            "a12345!"});
                table195.AddRow(new string[] {
                            "ConfirmPassword",
                            "a12345!"});
#line 328
        testRunner.And("I fill in", ((string)(null)), table195, "And ");
#line hidden
#line 334
        testRunner.And("I hit \"Publish\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 335
        testRunner.And("I am redirected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 336
    testRunner.Then("I should see \"User created\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                UsersFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                UsersFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
